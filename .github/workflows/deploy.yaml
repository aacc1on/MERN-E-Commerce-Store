# .github/workflows/deploy.yml
name: MERN E-Commerce CI/CD Pipeline

# Trigger events - երբ է գործարկվում
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Environment variables բոլոր jobs-ի համար  
env:
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_REPO: mern-ecommerce-store
  TAG: ${{ github.sha }}  # Git commit hash որպես tag

jobs:
  # JOB 1: BUILD AND TEST
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Source code checkout
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    # Step 2: Node.js setup
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    # Step 3: Install dependencies
    - name: Install Dependencies
      run: npm install
      
    # Step 4: Run tests (եթե կան)
    - name: Run Tests
      run: |
        npm test || echo "No tests found, skipping..."
        
    # Step 5: Build application
    - name: Build Application
      run: |
        npm run build || echo "No build script, skipping..."

  # JOB 2: DOCKER BUILD AND PUSH
  docker-build-push:
    needs: build-and-test  # Սկսվում է build-and-test-ից հետո
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Միայն main branch-ի համար
    
    steps:
    # Step 1: Checkout code
    - name: Checkout Repository  
      uses: actions/checkout@v4
      
    # Step 2: Docker Buildx setup (multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # Step 3: DockerHub login
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    # Step 4: Build և push Docker image
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO }}:latest
          ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO }}:${{ env.TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # JOB 3: DEPLOY TO KUBERNETES (Optional)
  deploy-to-k8s:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    # Step 1: Checkout code
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    # Step 2: Configure kubectl
    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        
    # Step 3: Update Kubernetes deployment
    - name: Deploy to Kubernetes
      run: |
        # Update image tag в deployment manifest
        sed -i "s|image: .*|image: ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO }}:${{ env.TAG }}|" k8s/deployment.yaml
        
        # Apply manifests
        kubectl apply -f k8s/
        
        # Wait for rollout
        kubectl rollout status deployment/mern-ecommerce
        
    # Step 4: Verify deployment
    - name: Verify Deployment
      run: |
        kubectl get pods
        kubectl get services